---
title: "Class05: Data Vis with ggplot"
author: "Whitney (PID:A16781338)"
format: pdf
---

# Graphics system in R

There are many graphics systems in R for making plots and figures.

We have already played a little with **"base R"** graphics and the `plot()` function.

Today we will start learning about a popular graphics package called `ggplot2()`.

This is an add on package - i.w. we need to install it. I install it (like I install any package) with the `install.packages()` function.


```{r}
plot(cars)
```

before I can yse tge functions from a package I have to load up the package from my "library". We use the `library(ggplot2)` command to load it up.
```{r}
library(ggplot2)
ggplot(cars)

```
every ggplot is made up of at least 3 things:
- data (the numbers etc. that will go into your plot)
- aes (how the columns of data map to the plot aesthetics)
- geoms(how the plot actually looks, points, bars, )

```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_point() + geom_smooth() + labs(title="Stopping distance of old cars", subtitile="a silly example of plot") + theme_bw()
```

for simple plots, ggplot is more verbose - it takes more code than  base R plot.

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)

nrow(genes)
colnames(genes)
ncol(genes)
table(genes$State)
```
Q. Use the nrow() function to find out how many genes are in this dataset. What is your answer? 
5196

Q. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find? 
4: Gene, Condition1, Condition2, State

Q. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer? 
127

Q. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset? 
2.44

Q. Complete the code below to produce the following plot
```{r}
ggplot(genes)+aes(x=Condition1, y=Condition2)+geom_point()
```

```{r}
p<-ggplot(genes)+aes(x=Condition1, y=Condition2, col=State) + geom_point()
p
```

```{r}
p+scale_colour_manual(values=c("blue","gray","red"))
```

```{r}
p+scale_colour_manual(values=c("blue","gray", "red"))+labs(title="Gene Expression Changes Upon Drug Treatment", x="Control(no drug)", y="Drug Treatment")
```

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)

# install.packages("dplyr")  ## un-comment to install if needed
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)
```
```{r}
ggplot(gapminder_2007)+aes(x="gdpPerCap",y="lifeExp")+geom_point()

```
